{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home This site contains my full Emacs configuration and its thorough documentation. Last updated: August 5, 2025","title":"Home"},{"location":"#home","text":"This site contains my full Emacs configuration and its thorough documentation. Last updated: August 5, 2025","title":"Home"},{"location":"about/","text":"About Why Emacs? Emacs is more than just a text editor. It's essentially a hacker's Swiss army knife with an infinite number of slots for new tools to add. What i use it for To list a few: IDE/text editing file management terminal pdf viewer note-taking obsidian-like \"second brain\" note-taking music player calculator calendar + scheduler/agenda Notable features Some neat features of my setup: Helix/Kakoune-like modal editing Elpaca package manager for asynchronous, non-blocking installations License This project is licensed under the MIT License. See the LICENSE file for details. Acknowledgements Last updated: August 5, 2025","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"build/early-init/","text":"early-init - Author: lispcat 187922791+lispcat@users.noreply.github.com The first file loaded at startup. loaded before gui creation. disable gui components here. Sets the following: - startup variables - dirs - UI - gui - transparency - eln-cache Last updated: { git_revision_date_localized }","title":"early-init"},{"location":"build/early-init/#early-init-","text":"Author: lispcat 187922791+lispcat@users.noreply.github.com The first file loaded at startup. loaded before gui creation. disable gui components here. Sets the following: - startup variables - dirs - UI - gui - transparency - eln-cache Last updated: { git_revision_date_localized }","title":"early-init -"},{"location":"build/init/","text":"init - the main init file Author: lispcat 187922791+lispcat@users.noreply.github.com The main init file. Last updated: { git_revision_date_localized }","title":"init"},{"location":"build/init/#init-the-main-init-file","text":"Author: lispcat 187922791+lispcat@users.noreply.github.com The main init file. Last updated: { git_revision_date_localized }","title":"init - the main init file"},{"location":"build/src/my-base/","text":"Last updated: { git_revision_date_localized }","title":"My base"},{"location":"build/src/my-completion/","text":"? : corfu, kind-icon, wgrep?, consult-dir, cape ^ more at ~/code/cloned/daviwil-dots/.emacs.d/modules/dw-interface.el TODO: vim keybinds for vertico completion shit (work on later) (also daviwil) a framework for minibuffer completion (https://github.com/minad/vertico) Last updated: { git_revision_date_localized }","title":"My completion"},{"location":"build/src/my-documentation/","text":"my-documentation - auto docs generator Author: lispcat 187922791+lispcat@users.noreply.github.com Automatically generates documentation using el2markdown. Converts elisp files into markdown docs. Last updated: { git_revision_date_localized }","title":"My documentation"},{"location":"build/src/my-documentation/#my-documentation-auto-docs-generator","text":"Author: lispcat 187922791+lispcat@users.noreply.github.com Automatically generates documentation using el2markdown. Converts elisp files into markdown docs. Last updated: { git_revision_date_localized }","title":"my-documentation - auto docs generator"},{"location":"build/src/my-ide/","text":"Last updated: { git_revision_date_localized }","title":"My ide"},{"location":"build/src/my-kbd/","text":"Actuates Meta key by default Last updated: { git_revision_date_localized }","title":"My kbd"},{"location":"build/src/my-latex/","text":"Last updated: { git_revision_date_localized }","title":"My latex"},{"location":"build/src/my-misc/","text":"Last updated: { git_revision_date_localized }","title":"My misc"},{"location":"build/src/my-org/","text":"Last updated: { git_revision_date_localized }","title":"My org"},{"location":"build/src/my-programs/","text":"Last updated: { git_revision_date_localized }","title":"My programs"},{"location":"build/src/my-to-sort/","text":"Last updated: { git_revision_date_localized }","title":"My to sort"},{"location":"build/src/my-ui/","text":"Last updated: { git_revision_date_localized }","title":"My ui"},{"location":"build/src/my-workspaces/","text":"maybe have each persp have its own save file, and when autosaving, save each persp? maybe have a function to delete a persp from the main autosave file? - prompt available perspectives from main autosave file, after selection, delete each from file. Last updated: { git_revision_date_localized }","title":"My workspaces"}]}